DSP数字信号处理器API
========================

数据类型与数据结构
-------------------

``handle_fn``
^^^^^^^^^^^^^^^^

.. code-block:: c

  typedef int (*handle_fn)(void *input, void *output, void *tm);

函数指针，指向处理DSP任务的函数。

API接口
-------------

``hb_dsp_env_init``
^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: c
  
  int hb_dsp_env_init();

DSP 环境初始化。

+ 返回值

  - 返回 ``0`` 则表示API成功执行，否则执行失败。

``hb_dsp_start``
^^^^^^^^^^^^^^^^^^

.. code-block:: c
  
  void hb_dsp_start();

启动DSP开始执行命令，实际上它从不返回。

``hb_dsp_register_fn``
^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: c
  
  int hb_dsp_register_fn(int cmd, handle_fn handle, int latency);

注册DSP op，应该在 ``hb_dsp_start`` 之前调用。

+ 参数

  - [in] ``cmd``        DSP op 编号。
  - [in] ``handle``     DSP op 函数指针。
  - [in] ``latency``    DSP op 运行时间，如果没有运行时间信息，则设置为0。

+ 返回值

  - 返回 ``0`` 则表示API成功执行，否则执行失败。

``hb_dsp_unregister_fn``
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: c
  
  int hb_dsp_unregister_fn(int cmd);

注销DSP op。

+ 参数

  - [in] ``cmd``        DSP op 编号。

+ 返回值

  - 返回 ``0`` 则表示API成功执行，否则执行失败。


